# #################################
# Hyperparameters for Parkinson's disease detection with wav2vec2
# #################################
# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
# Output folders
output_folder: !ref results/models/wav2vec2/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
# Path where data manifest files are stored
data_folder: augmented_data
train_annotation: "aug_manifests/train.json"
valid_annotation: "aug_manifests/valid.json"
test_annotation:  "aug_manifests/test.json"
# Sample rate for audio processing
sample_rate: 16000
# The train logger writes training statistics to a file, as well as stdout
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: !ref <train_log>
# Error calculation
error_stats: !name:speechbrain.utils.metric_stats.MetricStats
  metric: !name:speechbrain.nnet.losses.classification_error
# Training Parameters
number_of_epochs: 10
batch_size: 8
lr: 0.0001
lr_ssl: 0.00001
freeze_ssl: False
freeze_ssl_conv: True # Freeze the CNN feature extractor
# Model Parameters
encoder_dim: 768
n_classes: 2
dataloader_options:
  batch_size: !ref <batch_size>
  shuffle: True
  num_workers: 2
  drop_last: False
# wav2vec2 encoder
wav2vec2: !new:speechbrain.lobes.models.huggingface_transformers.wav2vec2.Wav2Vec2
  source: facebook/wav2vec2-base
  output_norm: True
  freeze: !ref <freeze_ssl>
  freeze_feature_extractor: !ref <freeze_ssl_conv>
  save_path: !ref <save_folder>/wav2vec2_checkpoint
# Pooling layer - compute mean of wav2vec2 outputs (ignoring padded values)
avg_pool: !new:speechbrain.nnet.pooling.StatisticsPooling
  return_std: False
# Classifier
classifier: !new:speechbrain.nnet.linear.Linear
  input_size: !ref <encoder_dim>
  n_neurons: !ref <n_classes>
  bias: True
# Log softmax for output probabilities
log_softmax: !new:speechbrain.nnet.activations.Softmax
  apply_log: True
# Loss function
compute_cost: !name:speechbrain.nnet.losses.nll_loss
# Epoch counter for training
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
  limit: !ref <number_of_epochs>
# Objects for the SpeechBrain HParams
modules:
  wav2vec2: !ref <wav2vec2>
  avg_pool: !ref <avg_pool>
  classifier: !ref <classifier>
# Model list for the checkpointer
model: !new:torch.nn.ModuleList
 - [!ref <classifier>]
# Optimizers
opt_class: !name:torch.optim.AdamW
  lr: !ref <lr>
ssl_opt_class: !name:torch.optim.AdamW
  lr: !ref <lr_ssl>
  weight_decay: 0.01
# Learning rate annealing for the output model
lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
  initial_value: !ref <lr>
  improvement_threshold: 0.0025
  annealing_factor: 0.9
  patient: 0
# Learning rate for the SSL encoder (wav2vec2)
lr_annealing_ssl: !new:speechbrain.nnet.schedulers.NewBobScheduler
  initial_value: !ref <lr_ssl>
  improvement_threshold: 0.0025
  annealing_factor: 0.9
# This object is used for saving the state of training
checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: !ref <save_folder>

recoverables:
  model: !ref <model>
  wav2vec2: !ref <wav2vec2>
  lr_annealing: !ref <lr_annealing>
  lr_annealing_ssl: !ref <lr_annealing_ssl>
  counter: !ref <epoch_counter>
